package project_bp1;

import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Project_BP1 extends javax.swing.JFrame {

    JasperReport jasperReport;
    JasperPrint jasperPrint;
    Map param = new HashMap<>();
    JasperDesign jasperDesign;

    ResultSet rs;
    PreparedStatement prep;
    Connector connector;

    /**
     * Creates new form Project_BP1
     */
    public Project_BP1() {
        connector = new Connector();
        initComponents();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        editBtn = new javax.swing.JToggleButton();
        simpanBtn = new javax.swing.JToggleButton();
        hapusBtn = new javax.swing.JToggleButton();
        kategoriField = new javax.swing.JTextField();
        kondisiBarangField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        namaBarangField = new javax.swing.JTextField();
        resetBtn = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        cetakLaporanBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nama Barang", "Kategori", "Kondisi Barang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("MANAJEMEN BARANG ANTIK");

        jLabel2.setText("NAMA BARANG");

        jLabel3.setText("KATEGORI");

        jLabel4.setText("KONDISI BARANG");

        editBtn.setBackground(new java.awt.Color(102, 204, 255));
        editBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("EDIT");
        editBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        simpanBtn.setBackground(new java.awt.Color(72, 227, 67));
        simpanBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        simpanBtn.setForeground(new java.awt.Color(255, 255, 255));
        simpanBtn.setText("SIMPAN");
        simpanBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        simpanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanBtnActionPerformed(evt);
            }
        });

        hapusBtn.setBackground(new java.awt.Color(255, 102, 102));
        hapusBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hapusBtn.setForeground(new java.awt.Color(255, 255, 255));
        hapusBtn.setText("HAPUS");
        hapusBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        hapusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtnActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchBtn.setText("CARI");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(255, 153, 0));
        resetBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setText("RESET");
        resetBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        cetakLaporanBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cetakLaporanBtn.setText("CETAK LAPORAN");
        cetakLaporanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakLaporanBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(kondisiBarangField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(kategoriField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(namaBarangField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(213, 213, 213)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(98, 98, 98)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(simpanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hapusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cetakLaporanBtn)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(namaBarangField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kategoriField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kondisiBarangField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(simpanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hapusBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cetakLaporanBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (validateForm()) {
            edit();
        } else {
            JOptionPane.showMessageDialog(this, "Data tidak valid atau kosong.");
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void simpanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanBtnActionPerformed
        if (validateForm()) {
            create();
        } else {
            JOptionPane.showMessageDialog(this, "Data tidak valid atau kosong.");
        }
    }//GEN-LAST:event_simpanBtnActionPerformed

    private void hapusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtnActionPerformed
        if (validateForm()) {
            delete();
        } else {
            JOptionPane.showMessageDialog(this, "Data tidak valid atau kosong.");
        }
    }//GEN-LAST:event_hapusBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();

        String nama = jTable1.getValueAt(selectedRow, 1).toString();
        String kategori = jTable1.getValueAt(selectedRow, 2).toString();
        String kondisi = jTable1.getValueAt(selectedRow, 3).toString();

        namaBarangField.setText(nama);
        kategoriField.setText(kategori);
        kondisiBarangField.setText(kondisi);
    }//GEN-LAST:event_jTable1MouseClicked

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        if (searchQueryRows() == 0) {
            JOptionPane.showMessageDialog(this, "Tidak ada data.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        load();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void cetakLaporanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakLaporanBtnActionPerformed
        try {
            File file = new File("C:\\Users\\MrFatra\\OneDrive\\Documents\\NetBeansProjects\\Project_BP1\\src\\project_bp1\\LaporanBarang.jrxml");
            jasperDesign = JRXmlLoader.load(file);
            param.clear();

            jasperReport = JasperCompileManager.compileReport(jasperDesign);
            jasperPrint = JasperFillManager.fillReport(jasperReport, param, connector.connect);

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            jasperViewer.setVisible(true);
        } catch (Exception err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_cetakLaporanBtnActionPerformed

    private void load() {
        String sql = "SELECT * FROM stuff";

        try {
            prep = connector.connect.prepareStatement(sql);
            rs = prep.executeQuery(sql);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                int column1 = rs.getInt("id");
                String column2 = rs.getString("name");
                String column3 = rs.getString("category");
                String column4 = rs.getString("stuff_condition");

                model.addRow(new Object[]{column1, column2, column3, column4});
            }

            clearField();
        } catch (Exception err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }

    private void create() {
        int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah anda yakin?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (konfirmasi == JOptionPane.NO_OPTION) {
            return;
        }

        String sql = "INSERT INTO stuff (name, category, stuff_condition) VALUES(?, ?, ?)";
        try {
            prep = connector.connect.prepareStatement(sql);

            prep.setString(1, namaBarangField.getText());
            prep.setString(2, kategoriField.getText());
            prep.setString(3, kondisiBarangField.getText());

            int rowsUpdated = prep.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil di input.");
            } else {
                JOptionPane.showMessageDialog(this, "Maaf, data gagal di input.");
            }

            load();
        } catch (Exception err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }

    private void edit() {
        int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah anda yakin?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (konfirmasi == JOptionPane.NO_OPTION) {
            return;
        }

        String sql = "UPDATE stuff SET name = ?, category = ?, stuff_condition = ? WHERE id = ?";

        try {
            int selectedRow = jTable1.getSelectedRow();
            String id = jTable1.getValueAt(selectedRow, 0).toString();

            prep = connector.connect.prepareStatement(sql);

            prep.setString(1, namaBarangField.getText());
            prep.setString(2, kategoriField.getText());
            prep.setString(3, kondisiBarangField.getText());
            prep.setString(4, id);

            int rowsUpdated = prep.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil di update.");
            } else {
                JOptionPane.showMessageDialog(this, "Maaf, data gagal di update.");
            }

            load();
        } catch (Exception err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }

    private void delete() {
        int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah anda yakin?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (konfirmasi == JOptionPane.NO_OPTION) {
            return;
        }

        String sql = "DELETE FROM stuff WHERE id = ?";

        try {
            prep = connector.connect.prepareStatement(sql);

            int selectedRow = jTable1.getSelectedRow();
            String id = jTable1.getValueAt(selectedRow, 0).toString();

            prep.setString(1, id);

            int rowsUpdated = prep.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil di delete.");
            } else {
                JOptionPane.showMessageDialog(this, "Maaf, data gagal di delete.");
            }

            load();
        } catch (Exception err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }

    private void clearField() {
        namaBarangField.setText("");
        kategoriField.setText("");
        kondisiBarangField.setText("");
    }

    private boolean validateForm() {
        boolean isValid = true;

        if (namaBarangField.getText().isEmpty()) {
            isValid = false;
        }
        if (kategoriField.getText().isEmpty()) {
            isValid = false;
        }
        if (kondisiBarangField.getText().isEmpty()) {
            isValid = false;
        }

        return isValid;
    }

    public int searchQueryRows() {
        String sql = "SELECT * FROM stuff WHERE "
                + "(? = '' OR LOWER(name) LIKE ?) AND "
                + "(? = '' OR LOWER(category) LIKE ?) AND "
                + "(? = '' OR LOWER(stuff_condition) LIKE ?)";

        int result = 0;

        try {

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            prep = connector.connect.prepareStatement(sql);

            prep.setString(1, namaBarangField.getText());
            prep.setString(2, "%" + namaBarangField.getText() + "%");
            prep.setString(3, kategoriField.getText());
            prep.setString(4, "%" + kategoriField.getText() + "%");
            prep.setString(5, kondisiBarangField.getText());
            prep.setString(6, "%" + kondisiBarangField.getText() + "%");

            rs = prep.executeQuery();

            while (rs.next()) {
                String idBarang = rs.getString("id");
                String namaBarang = rs.getString("name");
                String kategoriBarang = rs.getString("category");
                String kondisiBarang = rs.getString("stuff_condition");

                model.addRow(new Object[]{idBarang, namaBarang, kategoriBarang, kondisiBarang});
                result = 1;
            }

        } catch (Exception err) {
            JOptionPane.showMessageDialog(this, err);
        }

        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Project_BP1.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Project_BP1.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Project_BP1.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Project_BP1.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Project_BP1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cetakLaporanBtn;
    private javax.swing.JToggleButton editBtn;
    private javax.swing.JToggleButton hapusBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField kategoriField;
    private javax.swing.JTextField kondisiBarangField;
    private javax.swing.JTextField namaBarangField;
    private javax.swing.JToggleButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JToggleButton simpanBtn;
    // End of variables declaration//GEN-END:variables
}
